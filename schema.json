{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "LLM Instructions Schema",
  "description": "Schema for validating LLM instruction parameters",
  "type": "object",
  "properties": {
    "genAiInstructions:cognitiveLevel": {
      "type": "string",
      "enum": ["remember", "understand", "apply", "analyze", "evaluate", "create"],
      "description": "Cognitive level required to accomplish the instruction, based on Bloom's taxonomy",
      "examples": [
        {
          "level": "remember",
          "description": "Recall of information",
          "example": "Cite les 3 lois de Newton"
        },
        {
          "level": "understand",
          "description": "Reformulation and explanation",
          "example": "Explique le principe du Product-Market Fit"
        },
        {
          "level": "apply",
          "description": "Direct implementation",
          "example": "Utilise cette méthode pour résoudre ce cas client"
        },
        {
          "level": "analyze",
          "description": "Decomposition and structure",
          "example": "Compare ces deux stratégies de pricing"
        },
        {
          "level": "evaluate",
          "description": "Critical judgment",
          "example": "Quel est le point faible de cette approche ?"
        },
        {
          "level": "create",
          "description": "Original creation",
          "example": "Propose un nouveau modèle d'onboarding"
        }
      ]
    },
    "genAiInstructions:temperature": {
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "description": "Controls the creativity of the model"
    },
    "genAiInstructions:top_K": {
      "type": "number",
      "minimum": 1,
      "maximum": 200,
      "description": "Limits generation to the top K most probable words"
    },
    "genAiInstructions:top_P": {
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "description": "Defines the cumulative probability threshold for word selection"
    },
    "genAiInstructions:repetitionPenalty": {
      "type": "number",
      "minimum": 0.1,
      "maximum": 2,
      "description": "Penalizes repeated words"
    },
    "genAiInstructions:diversityPenalty": {
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "description": "Encourages global diversity in text generation"
    },
    "genAiInstructions:lengthBias": {
      "type": "number",
      "minimum": -10,
      "maximum": 10,
      "description": "Influences the length of the generated text"
    },
    "genAiInstructions:contextLengthBias": {
      "type": "number",
      "minimum": -10,
      "maximum": 10,
      "description": "Adjusts the preference for shorter or longer contexts"
    },
    "genAiInstructions:maxLength": {
      "type": "integer",
      "minimum": 1,
      "maximum": 4096,
      "description": "Defines the maximum number of tokens to generate"
    },
    "genAiInstructions:includeMetadata": {
      "type": "boolean",
      "description": "Indicates whether the output should include metadata"
    },
    "genAiInstructions:confidenceScore": {
      "type": "boolean",
      "description": "Indicates whether a confidence score should be generated"
    },
    "genAiInstructions:responseLength": {
      "type": "integer",
      "minimum": 1,
      "maximum": 100,
      "description": "Defines a range for the length of the responses in tokens"
    },
    "genAiInstructions:numberOfOutputs": {
      "type": "integer",
      "minimum": 1,
      "maximum": 1000,
      "description": "Generates multiple alternative versions of a response"
    },
    "genAiInstructions:toxicityFilter": {
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "description": "Filters potentially offensive or harmful content"
    },
    "genAiInstructions:offensivenessFilter": {
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "description": "Filters content that is violent or offensive"
    },
    "genAiInstructions:hallucinationDetection": {
      "type": "boolean",
      "description": "Detects and mitigates factually incorrect outputs"
    },
    "genAiInstructions:profanityFilter": {
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "description": "Filters vulgar or inappropriate words"
    },
    "genAiInstructions:sensitiveContentFilter": {
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "description": "Filters sensitive topics such as politics or religion"
    },
    "genAiInstructions:biasMitigation": {
      "type": "string",
      "enum": ["none", "low", "medium", "high"],
      "description": "Reduces biases in responses"
    },
    "genAiInstructions:responseTimeLimit": {
      "type": "number",
      "minimum": 0,
      "description": "Sets a time limit for generating a response"
    },
    "genAiInstructions:energyEfficiencyMode": {
      "type": "string",
      "enum": ["low", "medium", "high"],
      "description": "Optimizes resource usage by adjusting energy efficiency"
    },
    "genAiInstructions:processingMode": {
      "type": "string",
      "enum": ["fast", "balanced", "highQuality"],
      "description": "Selects between speed or quality optimization"
    },
    "genAiInstructions:computeBudget": {
      "type": "number",
      "minimum": 0,
      "description": "Defines a limit on the resources used for response generation"
    },
    "genAiInstructions:enableAttentionAnalysis": {
      "type": "boolean",
      "description": "Highlights specific parts of the input text that the model focused on"
    },
    "genAiInstructions:displayNeuronActivations": {
      "type": "boolean",
      "description": "Provides insights into the internal workings of the model"
    },
    "genAiInstructions:provideJustifications": {
      "type": "boolean",
      "description": "Accompanies each response with a justification"
    },
    "genAiInstructions:useExamplesAndCounterExamples": {
      "type": "boolean",
      "description": "Uses examples and counterexamples to illustrate responses"
    },
    "genAiInstructions:explainStepByStep": {
      "type": "boolean",
      "description": "Requests the model to detail its reasoning step by step"
    },
    "genAiInstructions:activateExplanationMode": {
      "type": "boolean",
      "description": "Activates all available explainability options"
    }
  },
  "additionalProperties": false
} 